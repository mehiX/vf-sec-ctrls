#!/usr/bin/env bash
set -e

rm -f dist/sec-ctrls

FLAGS=()
if [ -n "${VERBOSE}" ]; then
    FLAGS+=(-v)
fi

if [ -z "${VERSION}" ]; then
    VERSION=$(git rev-parse HEAD)
fi

if [ -z "${DATE}" ]; then
    DATE=$(date -u '+%Y-%m-%d_%I:%M:%S%p_%Z%z')
fi

echo "Building ${VERSION} ${DATE}"

PKG_VERSION="github.com/mehix/vf-sec-ctrls/pkg/version"
GO_BUILD_CMD="go build -ldflags"
GO_BUILD_ARGS="-s -w -X ${PKG_VERSION}.Version=${VERSION} -X ${PKG_VERSION}.BuildDate=${DATE}"

OS_PLATFORM_ARG=(linux windows darwin)
OS_ARCH_ARG=(amd64)

for OS in "${OS_PLATFORM_ARG[@]}"; do
    BIN_EXT=''
    if [ "${OS}" == "windows" ]; then
        BIN_EXT='.exe'
    fi
    for ARCH in "${OS_ARCH_ARG[@]}"; do
        echo "Build binary for ${OS}/${ARCH}..."
        GOARCH=${ARCH} GOOS=${OS} CGO_ENABLED=0 ${GO_BUILD_CMD} "${GO_BUILD_ARGS}" -o "dist/sec-ctrls_${OS}-${ARCH}${BIN_EXT}" ./main.go
    done
done

OS_PLATFORM_ARG=(linux darwin)
OS_ARCH_ARG=(arm64)

for OS in "${OS_PLATFORM_ARG[@]}"; do
    for ARCH in "${OS_ARCH_ARG[@]}"; do
        echo "Build binary for ${OS}/${ARCH}..."
        GOARCH=${ARCH} GOOS=${OS} CGO_ENABLED=0 ${GO_BUILD_CMD} "${GO_BUILD_ARGS}" -o "dist/sec-ctrls_${OS}-${ARCH}" ./main.go
    done
done

